name: MT5-CI     # ─ 任意のワークフロー名 ────────────────────────────────

on:
  push:
    branches:
      - main
      - feature/fix-cell-reuse   # ← 必要なブランチを列挙
  pull_request:
  workflow_dispatch:            # Actions 画面から手動実行も許可

jobs:
  test:
    runs-on: windows-latest      # MetaTrader 5 は Windows で動かす

    steps:
    # 1) リポジトリ取得
    - uses: actions/checkout@v4

    # 2) MetaTrader 5 を静かにインストール
    - name: Install MetaTrader 5
      shell: pwsh
      run: |
        $url  = 'https://download.mql5.com/cdn/web/metaquotes.software.corp/mt5/mt5setup.exe'
        $dest = "$env:TEMP\mt5setup.exe"

        Invoke-WebRequest $url -OutFile $dest -UseBasicParsing -Headers @{ "User-Agent" = "Mozilla/5.0" }

        # --- サイレント＆ブロッキングで実行 ---------------------------------
        $proc = Start-Process -FilePath $dest `
                  -ArgumentList '/install','/silent','/dir=C:\MT5' `
                  -PassThru -Wait
        if ($proc.ExitCode -ne 0) { throw "MT5 installer failed with code $($proc.ExitCode)" }

        # --- MetaEditor の存在チェック ---------------------------------------
        $editor = Get-ChildItem -Path 'C:\MT5' -Recurse `
                   -Include 'metaeditor64.exe','metaeditor.exe' -ErrorAction SilentlyContinue |
                  Select-Object -First 1
        if (-not $editor) { throw "MetaEditor not found under C:\MT5 – install failed" }

        'C:\MT5' | Out-File -FilePath $env:GITHUB_PATH -Encoding ascii -Append
        "EDITOR=$($editor.FullName)" | Out-File -FilePath $env:GITHUB_ENV -Encoding ascii -Append
        Write-Host ">> MetaTrader 5 installed OK : $($editor.FullName)"

    # 3) EA をコンパイル
    - name: Compile Trinity EA
      shell: pwsh
      run: |
        New-Item -ItemType Directory -Path build -Force | Out-Null
        & $env:EDITOR `
          /compile:src\trinity1.0.3.mq5 `
          /log:build\compile.log `
          /portable /quiet
        if ($LASTEXITCODE -ne 0) { throw "Compile failed ($LASTEXITCODE)" }
        Write-Host ">> Compile finished – log saved to build\\compile.log"

    # 4) ログを取得
    - uses: actions/upload-artifact@v4
      with:
        name: compile-log
        path: build/compile.log
